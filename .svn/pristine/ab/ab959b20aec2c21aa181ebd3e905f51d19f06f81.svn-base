<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
		<meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
		<link rel="stylesheet" type="text/css" href="../../css/aui2x1/aui.css" />
		<style type="text/css">
		</style>
	</head>
	<body>
		<header class="aui-bar aui-bar-nav aui-bg-theme aui-border-b" id="aui-header">
			<a class="aui-btn aui-pull-left" tapmode onclick="closeWin()"><span class="aui-iconfont aui-icon-left aui-text-default"></span></a>
			<div class="aui-title aui-text-default">
				流浪男
			</div>
		</header>
	</body>
	<script type="text/javascript" src="../../script/api.js"></script>
	<script type="text/javascript" src="../../script/common/common.js"></script>
	<script type="text/javascript">
		function closeWin() {
			api.closeWin({
			});
		}

		// 重新调整frame会话区域
		function setChatInit(frameName, inputAreaHeight) {
//			console.log("win高度:"+winHeight);
//			console.log("header高度:"+headerHeight);
//			console.log("input区域高度:"+inputAreaHeight);
//			console.log("frame高度:"+(winHeight - headerHeight - inputAreaHeight));
			api.setFrameAttr({
				name : frameName,
				rect : {
					x : 0,
					y : headerHeight,
					w : "auto",
					h : winHeight - headerHeight - inputAreaHeight
				}
			});
			setTimeout(function() {
				// 通知会话页面滚动到底部
				api.sendEvent({
					name : 'scrollBottom',
					extra : {}
				});
			}, 300);
		}

		// 图片压缩
		// imageFilter:压缩对象
		// imgsrc：源图片的路径
		// quality：图片压缩质量，一般建议0.5
		// scale：图片压缩比例，也是建议0.5
		// ext：源图片拓展名
		// callback：转换成功之后回调函数
		function _imgCompress(imageFilter, imgsrc, quality, scale, ext, callback) {
			// 压缩文件的保存目录
			var savePath = api.cacheDir + "/" + _getNowFormatDate() + "/";
			// 压缩文件生成的随机文件名称
			var savename = _newGuid() + "." + ext;
			imageFilter.compress({
				img : imgsrc,
				quality : quality,
				scale : scale,
				save : {
					album : false,
					imgPath : savePath,
					imgName : savename
				}
			}, function(ret, err) {
				if (ret) {
					callback(savePath + savename);
				} else {
					alert(JSON.stringify(err));
				}
			});
		}
		
		function openKFFrame(param){
		  api.closeFrame({
		      name:"chat_frm"
          });
          pageParam = $api.strToJson(param);
          _showProgress("正在转接中...", "", true);
          setTimeout(function(){
              openChatFrm();
              // 设置会话标题
              $api.text($api.dom(".aui-title"), pageParam.targetName);
              api.hideProgress();
          },350)
		}
		
        function openChatFrm(){
            var rect = {
                x : 0,
                y : headerHeight,
                h : winHeight - headerHeight - (_isIOS() ? 50 : 44) - 10
            };
            var  bounces = true, reload = false, allowEdit = false;
            var animation = {
                type : "fade", //动画类型（详见动画类型常量）
                subType : "from_right", //动画子类型（详见动画子类型常量）
                duration : 300 //动画过渡时间，默认300毫秒
            };
            _openFrame("chat_frm", "chat_frm.html", rect, pageParam, bounces, reload, allowEdit, animation);
        }
		var uiChatBox = null, uiMediaScanner = null, imageFilter = null;
		var winHeight, headerHeight;
		var pageParam=null;
		apiready = function() {
			api.parseTapmode();
			var header = $api.byId('aui-header');
			$api.fixStatusBar(header);
			$api.fixTabBar($api.dom("body"));			
			var headerPos = $api.offset(header);
			
			winHeight = api.winHeight;
			headerHeight = headerPos.h;
			pageParam=api.pageParam;
			
			openChatFrm();
			
			// 设置会话标题
			$api.text($api.dom(".aui-title"), pageParam.targetName);
			
			// 获取用户信息
			var userJson = $api.getStorage("userInfoKey");
			// 引入多选模块
			uiMediaScanner = api.require('UIMediaScanner');
			// 引入过滤压缩模块
			imageFilter = api.require("imageFilter");
			// 引入百度模块
			// 初始化聊天组件
			uiChatBox = api.require('UIChatBox');
			var extrasBtns = [{
				title : '图片',
				normalImg : 'widget://image/chatBox/chatBox_album1.png',
				activeImg : 'widget://image/chatBox/chatBox_album2.png'
			}, {
				title : '拍照',
				normalImg : 'widget://image/chatBox/chatBox_cam1.png',
				activeImg : 'widget://image/chatBox/chatBox_cam2.png'
			}];
			if (pageParam.framePage == "goods_detail_win") {
				//如果是从商品详情点进来，则添加商品链接按钮
				var extrasBtn = {
					title : '商品链接',
					normalImg : 'widget://image/chatBox/chatBox_link1.png',
					activeImg : 'widget://image/chatBox/chatBox_link1.png'
				}
				extrasBtns.push(extrasBtn);
			}
			uiChatBox.open({
				placeholder : '在此输入文字信息',
				maxRows : 4,
				emotionPath : 'widget://image/chatBox/emotion',
				texts : {
					recordBtn : {
						normalTitle : '按住 说话',
						activeTitle : '松开 结束'
					},
					sendBtn : {//（可选项）JSON对象；发送按钮文字内容，在 iOS 平台上对键盘内按钮无效
						title : '发送' //（可选项）字符串类型；按钮常态的标题，默认：'发送'
					}
				},
				styles : {
					inputBar : {
						borderColor : 'rgba(230,230,230,1)',
						bgColor : 'rgba(255,255,255,1)'
					},
					inputBox: {                     //（可选项）JSON对象；输入框样式
                        borderColor: '#B3B3B3',     //（可选项）字符串类型；输入框的边框颜色，支持 rgb，rgba，#；默认：'#B3B3B3'    
                        bgColor: '#f2f2f2',         //（可选项）字符串类型；输入框的背景色，支持 rgb，rgba，#；默认：'#f2f2f2'
                        boardBgColor: '#f2f2f2',    //（可选项）字符串类型；面板的背景色(表情面板，附加面板)，支持 rgb，rgba，#；默认：'#f2f2f2'
                        topMargin: 4,               //（可选项）数字类型；输入框距离顶部的边距；默认：10
                    },
					emotionBtn : {
						normalImg : 'widget://image/chatBox/chatBox_face1.png',
        				activeImg : 'widget://image/chatBox/chatBox_face1.png'
					},
					extrasBtn : {
						normalImg : 'widget://image/chatBox/chatBox_add1.png',
        				activeImg : 'widget://image/chatBox/chatBox_add2.png'
					},
					keyboardBtn : {
						normalImg : 'widget://image/chatBox/chatBox_key1.png',
        				activeImg : 'widget://image/chatBox/chatBox_key2.png'
					},
					speechBtn : {
						normalImg : 'widget://image/chatBox/chatBox_speech.png',
//						activeImg : 'widget://image/chatBox/chatBox_speech.png'
					},
					recordBtn : {
						normalBg : 'rgba(246,246,248,1)',
						activeBg : '#aaaaaa',
						color : '#212121',
						size : 14
					},
					indicator : {
						target : 'both',
						color : '#c4c4c4',
						activeColor : '#9e9e9e'
					},
					sendBtn : {//（可选项）JSON对象；发送按钮样式，本参数对 iOS 平台上的键盘内发送按钮无效
						bg : '#4cc518', //（可选项）字符串类型；发送按钮背景颜色，支持 rgb、rgba、#、img；默认：#4cc518
						titleColor : '#ffffff', //（可选项）字符串类型；发送按钮标题颜色；默认：#ffffff
						activeBg : '#46a91e', //（可选项）字符串类型；发送按钮背景颜色，支持 rgb、rgba、#、img；默认：无
						titleSize : 13 //（可选项）数字类型；发送按钮标题字体大小；默认：13
					}
				},
				extras : {
					titleSize : 12,
					titleColor : '#999999',
					btns : extrasBtns
				}
			}, function(ret) {
				//点击附加功能面板
				if (ret.eventType == 'clickExtras') {
					// 获取点击附件面板的索引
					var btnIndex = ret.index;
					switch(btnIndex) {
						// 点击照片按钮
						case 0:
							uiMediaScanner.open({
								type : 'picture',
								column : 4,
								classify : true,
								max : 9,
								sort : {
									key : 'time',
									order : 'desc'
								},
								texts : {
									stateText : '已选*项',
									cancelText : '取消',
									finishText : '完成'
								},
								styles : {
									bg : '#fff',
									mark : {
										icon : '',
										position : 'bottom_left',
										size : 20
									},
									nav : {
										bg : '#b23e4b',
										stateColor : '#fff',
										stateSize : 18,
										cancelBg : 'rgba(0,0,0,0)',
										cancelColor : '#fff',
										cancelSize : 18,
										finishBg : 'rgba(0,0,0,0)',
										finishColor : '#fff',
										finishSize : 18
									}
								}
							}, function(ret) {
								if (ret) {
									if (ret.list && typeof ret.list != "undefined" && ret.list.length > 0) {
										for (var i = 0; i < ret.list.length; i++) {
											var selectImg = ret.list[i];
											// 获取图片的路径
											var selectimgPath = selectImg.path;
											var selectimgThumbPath = selectImg.thumbPath;
											// IOS需要将虚拟路径转换为本地路径才可以压缩
											if (_isIOS()) {
												// 转换为真实路径
												uiMediaScanner.transPath({
													path : selectimgPath
												}, function(transObj) {
													// 图片压缩
													_imgCompress(imageFilter, transObj.path, 0.5, 0.5, selectImg.suffix, function(compressImg) {
														// 发送图片消息
														_sendEvent("sendMsgStart", {
															msgType : "image",
															conversationType : pageParam.conversationType,
															targetId : pageParam.targetId,
															content : compressImg,
															extra : JSON.stringify(userJson)
														});
													});
												});
											} else {
												// 图片压缩
												_imgCompress(imageFilter, selectimgPath, 0.5, 0.5, selectImg.suffix, function(compressImg) {
													// 发送图片消息
													_sendEvent("sendMsgStart", {
														msgType : "image",
														conversationType : pageParam.conversationType,
														targetId : pageParam.targetId,
														content : compressImg,
														extra : JSON.stringify(userJson)
													});
												});
											}
										}
									} else {
										api.toast({
											msg : '未选取任何图片！'
										});
									}
								}
							});
							break;
						// 打开拍照
						case 1:
							api.getPicture({
								sourceType : "camera",
								encodingType : "jpg",
								destinationType : "url",
								mediaValue : "pic",
								quality : 50,
								saveToPhotoAlbum : true
							}, function(ret, err) {
								if (ret && ret.data) {
									// 拍照返回的本地路径
									var returnUrl = ret.data;
									// 图片压缩
									_imgCompress(imageFilter, returnUrl, 0.5, 0.5, _getExt(returnUrl), function(compressImg) {
										// 发送图片消息
										_sendEvent("sendMsgStart", {
											msgType : "image",
											conversationType : pageParam.conversationType,
											targetId : pageParam.targetId,
											content : compressImg,
											extra : JSON.stringify(userJson)
										});
									});
								} else {
									_toast('没有选择，或者选择出错');
								}
							});
							break;
						// 商品链接
						case 2:
							// 发送图文信息
							userJson.goodsShortData = pageParam.goodsShortData;
							_sendEvent("sendMsgStart", {
								msgType : "richmsg",
								conversationType : pageParam.conversationType,
								targetId : pageParam.targetId,
								content : $api.jsonToStr(pageParam.goodsShortData),
								extra : JSON.stringify(userJson)
							});
							break;
					}
				}
				//点击发送按钮文字
				if (ret.eventType == 'send') {
					if (_isStringNull($api.trim(ret.msg))) {
						_toast("发送内容不能为空！");
						return;
					}
					// 广播开始发送，通知msg页面发送消息
					_sendEvent("sendMsgStart", {
						msgType : "text",
						conversationType : pageParam.conversationType,
						targetId : pageParam.targetId,
						content : ret.msg,
						extra : JSON.stringify(userJson)
					});
				}
			});
			//			api.toast({
			//				msg : 'conversationType:' + pageParam.conversationType + "\n targetId:" + pageParam.targetId + "\n targetName:" + pageParam.targetName
			//			});
			// 监听录音键是否被按下
			uiChatBox.addEventListener({
				target : 'recordBtn',
				name : 'press'
			}, function(ret, err) {
				// 录用保存目录
				var savePath = api.cacheDir + "/" + _getNowFormatDate() + "/";
				// 录音保存文件名
				var saveName = _newGuid() + ".amr";
				// 开始录音
				api.startRecord({
					path : savePath + saveName
				});
			});
			// 监听录音键是否松开了
			uiChatBox.addEventListener({
				target : 'recordBtn',
				name : 'press_cancel'
			}, function(ret, err) {
				// 停止录音
				api.stopRecord(function(ret, err) {
					if (ret) {
						if (ret.duration < 1) {
							return;
						}
						console.log("stopRecord.ret:" + $api.jsonToStr(ret));
						// 广播开始发送，通知msg页面发送消息
						// 设置语音时间
						userJson["duration"] = ret.duration;
						_sendEvent("sendMsgStart", {
							msgType : "voice",
							conversationType : pageParam.conversationType,
							targetId : pageParam.targetId,
							content : ret.path,
							extra : JSON.stringify(userJson)
						});
					}
				});
			});
			// 监听输入框弹动事件
			uiChatBox.addEventListener({
				target : 'inputBar',
				name : 'move'
			}, function(ret, err) {
//								console.log("move");
				setChatInit("chat_frm", ret.panelHeight + ret.inputBarHeight + (_isIOS() ? 0 : 10));
			});
			// 监听输入框改变事件
			uiChatBox.addEventListener({
				target : 'inputBar',
				name : 'change'
			}, function(ret, err) {
//								console.log("change");
				setChatInit("chat_frm", ret.panelHeight + ret.inputBarHeight + (_isIOS() ? 0 : 10));
			});			
		};
	</script>
</html>
