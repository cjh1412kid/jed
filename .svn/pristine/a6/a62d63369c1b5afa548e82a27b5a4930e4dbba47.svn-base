var dialogBox = {};
dialogBox.alert = function(_params, _call) {
    var _title = _isStringNull(arguments[0].title) ? "提示" : arguments[0].title;
    var _content = _isStringNull(arguments[0]).content ? "122" : arguments[0].content;
    var _leftBtnTitle = _isStringNull(arguments[0].leftBtnTitle) ? "取消" : arguments[0].leftBtnTitle;
    var _rightBtnTitle = _isStringNull(arguments[0].rightBtnTitle) ? "确定" : arguments[0].rightBtnTitle;
    var _tapClose = _isStringNull(arguments[0].tapClose) ? false : arguments[0].tapClose;
    var _animation = _isStringNull(arguments[0].animation) ? false : arguments[0].animation;
    var dialogBox = api.require('dialogBox');
    dialogBox.alert({
        texts: {
            title: _title, //（可选项）字符串类型；标题内容，若不传则不显示该文本
            content: _content,
            leftBtnTitle: _leftBtnTitle,
            rightBtnTitle: _rightBtnTitle
        },
        styles: {
            bg: '#fff', //对话框整体背景配置，支持#、rgb、rgba、img；默认：#fff
            corner: 8, //（可选项）数字类型；对话框背景圆角大小；默认：2
            w: 290, //对话框的宽；默认：300
            title: { //（可选项）JSON对象；弹窗标题栏样式配置，不传则不显示标题区域
                marginT: 20, //（可选项）数字类型；标题栏与对话框顶端间距；默认：20
                icon: '', //（可选项）字符串类型；标题前面的图标路径，要求本地路径（widget://、fs://）；图片为正方形的，如：50*50、100*100，建议开发者传大小合适的图片以适配高分辨率手机屏幕，不传则不显示
                iconSize: 40, //（可选项）数字类型；icon 图标边长大小,若 icon 不存在则此参数无效；默认：24
                titleSize: 16, //（可选项）数字类型；标题字体大小；默认：14
                titleColor: '#212121' //（可选项）字符串类型；标题字体颜色，支持#、rgb、rgba；默认：#fff
            },
            content: {
                marginT: 15, //（可选项）数字类型；内容文本顶端与标题栏底端的距离，如果标题栏不存在，则是到窗口顶端的距离；默认：20
                marginB: 20, //（可选项）数字类型；内容文本底端与 left/right 顶端的距离，如果 left/right 都不存在，则是到对话框底端的距离；默认：20
                color: '#212121', //（可选项）字符串类型；内容文本字体颜色，支持 rgb、rgba、#；默认：#eee
                size: 14 //（可选项）数字类型：内容文本字体大小；默认：12
            },
            left: { //（可选项）JSON 对象；左边按钮样式配置，不传则不显示左边按钮
                marginB: 0, //（可选项）数字类型；左边按钮的下边距；默认：7
                marginL: 0, //（可选项）数字类型；左边按钮的左边距；默认：20
                w: 145, //（可选项）数字类型；左边按钮的宽；默认：130
                h: 45, //（可选项）数字类型；左边按钮的高；默认：35
                corner: 8, //（可选项）数字类型；左边按钮圆角半径；默认：0.0
                bg: '#fff', //（可选项）字符串类型；左边按钮的背景，支持rgb、rgba、#、img；默认：'#e0e'
                color: '#FFA03B', //（可选项）字符串类型；左边按钮标题字体颜色，支持rgb，rgba、#；默认：'#007FFF'
                size: 14 //（可选项）数字类型；左边按钮标题字体大小；默认：12
            },
            right: { //（可选项）JSON 对象；右边按钮样式配置，不传则不显示右边按钮
                marginB: 0, //（可选项）数字类型；右边按钮的下边距；默认：7
                marginL: 0, //（可选项）数字类型；右边按钮左边距；默认：10
                w: 145, //（可选项）数字类型；右边按钮的宽；默认：130
                h: 45, //（可选项）数字类型；右边按钮的高；默认：35
                corner: 8, //（可选项）数字类型；右边按钮圆角半径；默认：0.0
                bg: '#fff', //（可选项）字符串类型；右边按钮的背景，支持rgb、rgba、#、img；默认：'#e0e'
                color: '#FFA03B', //（可选项）字符串类型；右边按钮标题字体颜色，支持rgb、rgba、#；默认：'#007FFF'
                size: 14 //（可选项）数字类型；右边按钮标题字体大小；默认：12
            },
            horizontalLine: {
                color: 'rgba(245,245,245,0.8)', //（可选项）字符串类型；左右按钮上边横线的颜色，支持rgb、rgba、#；默认：'rgba(245,245,245,0)'
                height: 1 //（可选项）数字类型；左右边按钮横线的高度；默认：0
            },
            verticalLine: {
                color: 'rgba(245,245,245,0.8)', //（可选项）字符串类型；左右按钮中间竖线的颜色，支持rgb、rgba、#；默认：'rgba(245,245,245,0)'
                width: 1 //（可选项）数字类型；左右边按钮竖线的高度；默认：0
            }
        },
        tapClose: _tapClose, //点击遮罩，android系统点击回退是否取消对话框
        animation: _animation, //描述：是否再打开或关闭对话框时使用动画
    }, function(ret) {
        // ret:{
        //   eventType: 'left', //字符串类型；交互事件类型，取值范围如下：
        //   left（ 表示用户点击了左边按钮）
        //   right（ 表示用户点击了右边按钮）
        //   }
        dialogBox.close({
            dialogName: 'alert'
        });
        _call(ret);
    });
};
dialogBox.actionMenu = function(_params, _call) {
    var _h = _isStringNull(arguments[0].h) ? 150 : arguments[0].h;
    var _items = _isStringNull(arguments[0]).items ? [] : arguments[0].items;
    var _column = _isStringNull(arguments[0].column) ? 3 : arguments[0].column;
    var _isCuttingLine = _isStringNull(arguments[0].isCuttingLine) ? false : arguments[0].isCuttingLine;
    var _tapClose = _isStringNull(arguments[0].tapClose) ? false : arguments[0].tapClose;
    var _animation = _isStringNull(arguments[0].animation) ? false : arguments[0].animation;
    var dialogBox = api.require('dialogBox');
    dialogBox.actionMenu({
        rect: {
            h: _h,
        },
        texts: {
            cancel: '取消'
        },
        items: _items,
        styles: {
            bg: '#FFF',
            maskBg: 'rgba(0,0,0,0)',
            column: _column,
            itemText: {
                color: '#000',
                size: 12,
                marginT: 8
            },
            itemIcon: {
                size: 30
            },
            cancel: {
                bg: 'fs://icon.png',
                color: '#000',
                h: 44,
                size: 14
            }
        },
        isCuttingLine: _isCuttingLine,
        tapClose: _tapClose,
        animation: _animation, //描述：是否再打开或关闭对话框时使用动画
    }, function(ret) {
        // ret:{
        //   index: 0,                // 数字类型；所点击的子按钮的索引（由左至右），仅当 eventType 为 click 时有值
        //   eventType: 'cancel', //字符串类型；交互事件类型，取值范围如下：
        //   cancel (表示点击取消按钮事件)
        //   click（ 表示用户点击子按钮事件）
        //   }
        dialogBox.close({
            dialogName: 'actionMenu'
        });
        _call(ret);
    });
}
